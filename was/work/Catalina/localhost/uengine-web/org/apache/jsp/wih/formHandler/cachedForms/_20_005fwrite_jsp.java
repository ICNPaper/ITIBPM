/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.9
 * Generated at: 2017-02-02 04:13:29 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.wih.formHandler.cachedForms;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import org.uengine.ui.taglibs.input.InputConstants;
import java.util.HashMap;
import java.util.Map;
import java.util.Enumeration;
import java.util.Iterator;
import java.util.ArrayList;
import java.util.List;
import org.uengine.kernel.*;
import org.uengine.processmanager.*;

public final class _20_005fwrite_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/tlds/taglibs_input.tld", Long.valueOf(1437465138000L));
    _jspx_dependants.put("/wih/formHandler/cachedForms/../../../common/commons.jsp", Long.valueOf(1437465138000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("org.uengine.kernel");
    _jspx_imports_packages.add("org.uengine.processmanager");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("java.util.Iterator");
    _jspx_imports_classes.add("java.util.Enumeration");
    _jspx_imports_classes.add("java.util.Map");
    _jspx_imports_classes.add("java.util.HashMap");
    _jspx_imports_classes.add("org.uengine.ui.taglibs.input.InputConstants");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005finput_005ftextarea_0026_005fviewMode_005fname_005fdefault_005fattributes_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005finput_005fselect_0026_005fviewMode_005foptionValues_005foptionLabels_005fname_005fmultiple_005fattributes_005fnobody;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005finput_005ftextarea_0026_005fviewMode_005fname_005fdefault_005fattributes_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005finput_005fselect_0026_005fviewMode_005foptionValues_005foptionLabels_005fname_005fmultiple_005fattributes_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005finput_005ftextarea_0026_005fviewMode_005fname_005fdefault_005fattributes_005fnobody.release();
    _005fjspx_005ftagPool_005finput_005fselect_0026_005fviewMode_005foptionValues_005foptionLabels_005fname_005fmultiple_005fattributes_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

response.setContentType("text/html; charset=UTF-8");
      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

    boolean isCompleted =false;
    ProcessManagerRemote manager=null;
    ProcessInstance instance=null;
    RoleMapping loggedRoleMapping=null;
    FormActivity formActivity=null;
    try{
		formActivity = (FormActivity)request.getAttribute("formActivity");
		loggedRoleMapping = (RoleMapping)request.getAttribute("loggedRoleMapping");
		instance = (ProcessInstance)request.getAttribute("instance");
		manager = (ProcessManagerRemote)request.getAttribute("pm");
        isCompleted  ="Completed".equals( formActivity.getStatus(instance));
	}catch(Exception e){}

      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("\r\n");
      out.write("<p>\r\n");
      out.write("\t장애내용:\r\n");
      out.write(" ");
 
 java.util.Hashtable trouble_desc_4 = new java.util.Hashtable(); 
 trouble_desc_4.put("cols", "80"); 
 trouble_desc_4.put("rows", "5"); 
 trouble_desc_4.put("attrid", "TEMP_ATTR_ID"); 
 
      out.write(" \r\n");
      out.write(" ");
      //  input:textarea
      org.uengine.ui.taglibs.input.TextArea _jspx_th_input_005ftextarea_005f0 = (org.uengine.ui.taglibs.input.TextArea) _005fjspx_005ftagPool_005finput_005ftextarea_0026_005fviewMode_005fname_005fdefault_005fattributes_005fnobody.get(org.uengine.ui.taglibs.input.TextArea.class);
      try {
        _jspx_th_input_005ftextarea_005f0.setPageContext(_jspx_page_context);
        _jspx_th_input_005ftextarea_005f0.setParent(null);
        // /wih/formHandler/cachedForms/20_write.jsp(12,1) name = name type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_input_005ftextarea_005f0.setName("trouble_desc");
        // /wih/formHandler/cachedForms/20_write.jsp(12,1) name = viewMode type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_input_005ftextarea_005f0.setViewMode(0);
        // /wih/formHandler/cachedForms/20_write.jsp(12,1) name = attributes type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_input_005ftextarea_005f0.setAttributes(trouble_desc_4);
        // /wih/formHandler/cachedForms/20_write.jsp(12,1) name = default type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_input_005ftextarea_005f0.setDefault("");
        int _jspx_eval_input_005ftextarea_005f0 = _jspx_th_input_005ftextarea_005f0.doStartTag();
        if (_jspx_th_input_005ftextarea_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return;
        }
      } finally {
        _005fjspx_005ftagPool_005finput_005ftextarea_0026_005fviewMode_005fname_005fdefault_005fattributes_005fnobody.reuse(_jspx_th_input_005ftextarea_005f0);
      }
      out.write("</p>\r\n");
      out.write("<p>\r\n");
      out.write("\t장애분류:\r\n");
      out.write(" ");
 
 java.util.Hashtable trouble_class_0 = new java.util.Hashtable(); 
 java.util.List trouble_class_1 = new java.util.Vector(); 
 java.util.List trouble_class_2 = new java.util.Vector(); 
 trouble_class_1.add("시스템 오류"); trouble_class_2.add("system"); 
 trouble_class_1.add("하드웨어 오류"); trouble_class_2.add("hardware"); 
 trouble_class_1.add("개선"); trouble_class_2.add("req"); 
 trouble_class_0.put("attrid", "TEMP_ATTR_ID"); 
 
      out.write(" \r\n");
      out.write(" ");
      //  input:select
      org.uengine.ui.taglibs.input.Select _jspx_th_input_005fselect_005f0 = (org.uengine.ui.taglibs.input.Select) _005fjspx_005ftagPool_005finput_005fselect_0026_005fviewMode_005foptionValues_005foptionLabels_005fname_005fmultiple_005fattributes_005fnobody.get(org.uengine.ui.taglibs.input.Select.class);
      try {
        _jspx_th_input_005fselect_005f0.setPageContext(_jspx_page_context);
        _jspx_th_input_005fselect_005f0.setParent(null);
        // /wih/formHandler/cachedForms/20_write.jsp(24,1) name = name type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_input_005fselect_005f0.setName("trouble_class");
        // /wih/formHandler/cachedForms/20_write.jsp(24,1) name = optionLabels type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_input_005fselect_005f0.setOptionLabels(trouble_class_1);
        // /wih/formHandler/cachedForms/20_write.jsp(24,1) name = optionValues type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_input_005fselect_005f0.setOptionValues(trouble_class_2);
        // /wih/formHandler/cachedForms/20_write.jsp(24,1) name = viewMode type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_input_005fselect_005f0.setViewMode(0);
        // /wih/formHandler/cachedForms/20_write.jsp(24,1) name = attributes type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_input_005fselect_005f0.setAttributes(trouble_class_0);
        // /wih/formHandler/cachedForms/20_write.jsp(24,1) name = multiple type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_input_005fselect_005f0.setMultiple(false);
        int _jspx_eval_input_005fselect_005f0 = _jspx_th_input_005fselect_005f0.doStartTag();
        if (_jspx_th_input_005fselect_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return;
        }
      } finally {
        _005fjspx_005ftagPool_005finput_005fselect_0026_005fviewMode_005foptionValues_005foptionLabels_005fname_005fmultiple_005fattributes_005fnobody.reuse(_jspx_th_input_005fselect_005f0);
      }
      out.write(" </p>\r\n");
      out.write("\n");
      out.write("<script language=\"javascript\"> \n");
      out.write("<!-- \n");
      out.write("function valid_check(){ \n");
      out.write("\n");
      out.write("\treturn true; \n");
      out.write("} \n");
      out.write("\n");
      out.write("//--> \n");
      out.write("</script> ");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
